{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nimport math\nimport random\nfrom vexcode_vr import *\n\n# Brain should be defined by default\nbrain=Brain()\n\ndrivetrain = Drivetrain(\"drivetrain\", 0)\npen = Pen(\"pen\", 8)\npen.set_pen_width(THIN)\nleft_bumper = Bumper(\"leftBumper\", 2)\nright_bumper = Bumper(\"rightBumper\", 3)\nfront_eye = EyeSensor(\"frontEye\", 4)\ndown_eye = EyeSensor(\"downEye\", 5)\nfront_distance = Distance(\"frontdistance\", 6)\ndistance = front_distance\nmagnet = Electromagnet(\"magnet\", 7)\nlocation = Location(\"location\", 9)\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode VR Python Project\n# \n# ------------------------------------------\n\ndef scan():\n    min_distance = 63\n    max_distance = 1999\n    possible_routes = []\n\n    for count in range(4):\n        drivetrain.turn_for(LEFT,90,DEGREES)\n        if front_distance.get_distance(MM) > min_distance and front_distance.get_distance(MM) < max_distance:\n            possible_routes.append(\"unvisited\")\n        else:\n            possible_routes.append(\"wall\")\n    return possible_routes\n\ndef main():\n    routes = scan()\n    moves = [\"START\"]\n\n    brain.print(routes)\n\n\n    if routes[0] != \"wall\":\n        drivetrain.turn_for(LEFT,90,DEGREES)\n        drivetrain.drive_for(FORWARD,250,MM)\n        moves.append(\"LEFT\")\n\n    elif routes[1] != \"wall\":\n        drivetrain.turn_for(LEFT,180,DEGREES)\n        drivetrain.drive_for(FORWARD,250,MM)\n        moves.append(\"DOWN\")\n\n\n    elif routes[2] != \"wall\":\n        drivetrain.turn_for(LEFT,270,DEGREES)\n        drivetrain.drive_for(FORWARD,250,MM)\n        moves.append(\"RIGHT\")\n\n\n    else:\n        moves.append(\"UP\")\n        drivetrain.drive_for(FORWARD,250,MM)\n\n    drivetrain.turn_to_heading(0,DEGREES)\n    \n    \n\n\n\n\n# VR threads â€” Do not delete\nvr_thread(main)","textLanguage":"python","robotConfig":[],"slot":0,"platform":"PG","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","minVersion":"3.0.0","fileFormat":"2.0.0","targetBrainGen":"First","v5SoundsEnabled":false,"playground":"DynamicWallMaze","robotModel":"vr"}